// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: YiQuJiangHu.proto

#include "YiQuJiangHu.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_YiQuJiangHu_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Gameinfo_YiQuJiangHu_2eproto;
namespace YiQuJiangHuNetData {
class MsgHeadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgHead> _instance;
} _MsgHead_default_instance_;
class Client_ping_reqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Client_ping_req> _instance;
} _Client_ping_req_default_instance_;
class Server_pong_rspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Server_pong_rsp> _instance;
} _Server_pong_rsp_default_instance_;
class Client_regist_reqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Client_regist_req> _instance;
} _Client_regist_req_default_instance_;
class Server_regist_rspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Server_regist_rsp> _instance;
} _Server_regist_rsp_default_instance_;
class Client_login_reqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Client_login_req> _instance;
} _Client_login_req_default_instance_;
class Server_login_rspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Server_login_rsp> _instance;
} _Server_login_rsp_default_instance_;
class Client_login_out_reqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Client_login_out_req> _instance;
} _Client_login_out_req_default_instance_;
class Server_login_out_rspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Server_login_out_rsp> _instance;
} _Server_login_out_rsp_default_instance_;
class GameinfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Gameinfo> _instance;
} _Gameinfo_default_instance_;
class Client_save_reqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Client_save_req> _instance;
} _Client_save_req_default_instance_;
class Server_save_rspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Server_save_rsp> _instance;
} _Server_save_rsp_default_instance_;
class Client_rank_reqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Client_rank_req> _instance;
} _Client_rank_req_default_instance_;
class Server_rank_rspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Server_rank_rsp> _instance;
} _Server_rank_rsp_default_instance_;
}  // namespace YiQuJiangHuNetData
static void InitDefaultsscc_info_Client_login_out_req_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Client_login_out_req_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Client_login_out_req();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Client_login_out_req::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Client_login_out_req_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Client_login_out_req_YiQuJiangHu_2eproto}, {}};

static void InitDefaultsscc_info_Client_login_req_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Client_login_req_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Client_login_req();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Client_login_req::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Client_login_req_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Client_login_req_YiQuJiangHu_2eproto}, {}};

static void InitDefaultsscc_info_Client_ping_req_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Client_ping_req_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Client_ping_req();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Client_ping_req::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Client_ping_req_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Client_ping_req_YiQuJiangHu_2eproto}, {}};

static void InitDefaultsscc_info_Client_rank_req_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Client_rank_req_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Client_rank_req();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Client_rank_req::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Client_rank_req_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Client_rank_req_YiQuJiangHu_2eproto}, {}};

static void InitDefaultsscc_info_Client_regist_req_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Client_regist_req_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Client_regist_req();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Client_regist_req::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Client_regist_req_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Client_regist_req_YiQuJiangHu_2eproto}, {}};

static void InitDefaultsscc_info_Client_save_req_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Client_save_req_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Client_save_req();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Client_save_req::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Client_save_req_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Client_save_req_YiQuJiangHu_2eproto}, {}};

static void InitDefaultsscc_info_Gameinfo_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Gameinfo_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Gameinfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Gameinfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Gameinfo_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Gameinfo_YiQuJiangHu_2eproto}, {}};

static void InitDefaultsscc_info_MsgHead_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_MsgHead_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::MsgHead();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::MsgHead::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgHead_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgHead_YiQuJiangHu_2eproto}, {}};

static void InitDefaultsscc_info_Server_login_out_rsp_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Server_login_out_rsp_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Server_login_out_rsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Server_login_out_rsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Server_login_out_rsp_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Server_login_out_rsp_YiQuJiangHu_2eproto}, {}};

static void InitDefaultsscc_info_Server_login_rsp_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Server_login_rsp_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Server_login_rsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Server_login_rsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Server_login_rsp_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Server_login_rsp_YiQuJiangHu_2eproto}, {}};

static void InitDefaultsscc_info_Server_pong_rsp_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Server_pong_rsp_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Server_pong_rsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Server_pong_rsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Server_pong_rsp_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Server_pong_rsp_YiQuJiangHu_2eproto}, {}};

static void InitDefaultsscc_info_Server_rank_rsp_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Server_rank_rsp_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Server_rank_rsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Server_rank_rsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Server_rank_rsp_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Server_rank_rsp_YiQuJiangHu_2eproto}, {
      &scc_info_Gameinfo_YiQuJiangHu_2eproto.base,}};

static void InitDefaultsscc_info_Server_regist_rsp_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Server_regist_rsp_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Server_regist_rsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Server_regist_rsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Server_regist_rsp_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Server_regist_rsp_YiQuJiangHu_2eproto}, {}};

static void InitDefaultsscc_info_Server_save_rsp_YiQuJiangHu_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::YiQuJiangHuNetData::_Server_save_rsp_default_instance_;
    new (ptr) ::YiQuJiangHuNetData::Server_save_rsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YiQuJiangHuNetData::Server_save_rsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Server_save_rsp_YiQuJiangHu_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Server_save_rsp_YiQuJiangHu_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_YiQuJiangHu_2eproto[14];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_YiQuJiangHu_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_YiQuJiangHu_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_YiQuJiangHu_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::MsgHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::MsgHead, proto_),
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::MsgHead, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_ping_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_ping_req, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Server_pong_rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Server_pong_rsp, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_regist_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_regist_req, name_),
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_regist_req, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Server_regist_rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Server_regist_rsp, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_login_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_login_req, name_),
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_login_req, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Server_login_rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Server_login_rsp, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_login_out_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_login_out_req, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Server_login_out_rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Server_login_out_rsp, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Gameinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Gameinfo, gid_),
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Gameinfo, score_),
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Gameinfo, chapter_),
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Gameinfo, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_save_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_save_req, score_),
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_save_req, chapter_),
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_save_req, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Server_save_rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Server_save_rsp, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_rank_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Client_rank_req, chapter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Server_rank_rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::YiQuJiangHuNetData::Server_rank_rsp, datas_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::YiQuJiangHuNetData::MsgHead)},
  { 7, -1, sizeof(::YiQuJiangHuNetData::Client_ping_req)},
  { 13, -1, sizeof(::YiQuJiangHuNetData::Server_pong_rsp)},
  { 19, -1, sizeof(::YiQuJiangHuNetData::Client_regist_req)},
  { 26, -1, sizeof(::YiQuJiangHuNetData::Server_regist_rsp)},
  { 32, -1, sizeof(::YiQuJiangHuNetData::Client_login_req)},
  { 39, -1, sizeof(::YiQuJiangHuNetData::Server_login_rsp)},
  { 45, -1, sizeof(::YiQuJiangHuNetData::Client_login_out_req)},
  { 51, -1, sizeof(::YiQuJiangHuNetData::Server_login_out_rsp)},
  { 57, -1, sizeof(::YiQuJiangHuNetData::Gameinfo)},
  { 66, -1, sizeof(::YiQuJiangHuNetData::Client_save_req)},
  { 74, -1, sizeof(::YiQuJiangHuNetData::Server_save_rsp)},
  { 80, -1, sizeof(::YiQuJiangHuNetData::Client_rank_req)},
  { 86, -1, sizeof(::YiQuJiangHuNetData::Server_rank_rsp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_MsgHead_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Client_ping_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Server_pong_rsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Client_regist_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Server_regist_rsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Client_login_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Server_login_rsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Client_login_out_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Server_login_out_rsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Gameinfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Client_save_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Server_save_rsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Client_rank_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::YiQuJiangHuNetData::_Server_rank_rsp_default_instance_),
};

const char descriptor_table_protodef_YiQuJiangHu_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021YiQuJiangHu.proto\022\022YiQuJiangHuNetData\""
  "&\n\007MsgHead\022\r\n\005proto\030\001 \001(\t\022\014\n\004data\030\002 \001(\014\""
  "\036\n\017Client_ping_req\022\013\n\003Msg\030\001 \001(\t\"\036\n\017Serve"
  "r_pong_rsp\022\013\n\003Msg\030\001 \001(\t\"3\n\021Client_regist"
  "_req\022\014\n\004Name\030\001 \001(\t\022\020\n\010Password\030\002 \001(\t\" \n\021"
  "Server_regist_rsp\022\013\n\003Msg\030\001 \001(\010\"2\n\020Client"
  "_login_req\022\014\n\004Name\030\001 \001(\t\022\020\n\010Password\030\002 \001"
  "(\t\"\037\n\020Server_login_rsp\022\013\n\003Msg\030\001 \001(\010\"\"\n\024C"
  "lient_login_out_req\022\n\n\002ID\030\001 \001(\003\"#\n\024Serve"
  "r_login_out_rsp\022\013\n\003Msg\030\001 \001(\t\"C\n\010Gameinfo"
  "\022\013\n\003Gid\030\001 \001(\005\022\r\n\005Score\030\002 \001(\005\022\017\n\007Chapter\030"
  "\003 \001(\005\022\n\n\002ID\030\004 \001(\003\"=\n\017Client_save_req\022\r\n\005"
  "Score\030\001 \001(\005\022\017\n\007Chapter\030\002 \001(\005\022\n\n\002ID\030\003 \001(\003"
  "\"\036\n\017Server_save_rsp\022\013\n\003Msg\030\001 \001(\t\"\"\n\017Clie"
  "nt_rank_req\022\017\n\007Chapter\030\001 \001(\003\">\n\017Server_r"
  "ank_rsp\022+\n\005Datas\030\001 \003(\0132\034.YiQuJiangHuNetD"
  "ata.Gameinfob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_YiQuJiangHu_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_YiQuJiangHu_2eproto_sccs[14] = {
  &scc_info_Client_login_out_req_YiQuJiangHu_2eproto.base,
  &scc_info_Client_login_req_YiQuJiangHu_2eproto.base,
  &scc_info_Client_ping_req_YiQuJiangHu_2eproto.base,
  &scc_info_Client_rank_req_YiQuJiangHu_2eproto.base,
  &scc_info_Client_regist_req_YiQuJiangHu_2eproto.base,
  &scc_info_Client_save_req_YiQuJiangHu_2eproto.base,
  &scc_info_Gameinfo_YiQuJiangHu_2eproto.base,
  &scc_info_MsgHead_YiQuJiangHu_2eproto.base,
  &scc_info_Server_login_out_rsp_YiQuJiangHu_2eproto.base,
  &scc_info_Server_login_rsp_YiQuJiangHu_2eproto.base,
  &scc_info_Server_pong_rsp_YiQuJiangHu_2eproto.base,
  &scc_info_Server_rank_rsp_YiQuJiangHu_2eproto.base,
  &scc_info_Server_regist_rsp_YiQuJiangHu_2eproto.base,
  &scc_info_Server_save_rsp_YiQuJiangHu_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_YiQuJiangHu_2eproto_once;
static bool descriptor_table_YiQuJiangHu_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_YiQuJiangHu_2eproto = {
  &descriptor_table_YiQuJiangHu_2eproto_initialized, descriptor_table_protodef_YiQuJiangHu_2eproto, "YiQuJiangHu.proto", 660,
  &descriptor_table_YiQuJiangHu_2eproto_once, descriptor_table_YiQuJiangHu_2eproto_sccs, descriptor_table_YiQuJiangHu_2eproto_deps, 14, 0,
  schemas, file_default_instances, TableStruct_YiQuJiangHu_2eproto::offsets,
  file_level_metadata_YiQuJiangHu_2eproto, 14, file_level_enum_descriptors_YiQuJiangHu_2eproto, file_level_service_descriptors_YiQuJiangHu_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_YiQuJiangHu_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_YiQuJiangHu_2eproto), true);
namespace YiQuJiangHuNetData {

// ===================================================================

void MsgHead::InitAsDefaultInstance() {
}
class MsgHead::_Internal {
 public:
};

MsgHead::MsgHead()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.MsgHead)
}
MsgHead::MsgHead(const MsgHead& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  proto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_proto().empty()) {
    proto_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.proto_);
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.MsgHead)
}

void MsgHead::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MsgHead_YiQuJiangHu_2eproto.base);
  proto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MsgHead::~MsgHead() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.MsgHead)
  SharedDtor();
}

void MsgHead::SharedDtor() {
  proto_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MsgHead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgHead& MsgHead::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgHead_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void MsgHead::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.MsgHead)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  proto_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* MsgHead::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string proto = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_proto(), ptr, ctx, "YiQuJiangHuNetData.MsgHead.proto");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(_internal_mutable_data(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgHead::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.MsgHead)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string proto = 1;
  if (this->proto().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_proto().data(), static_cast<int>(this->_internal_proto().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "YiQuJiangHuNetData.MsgHead.proto");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_proto(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.MsgHead)
  return target;
}

size_t MsgHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.MsgHead)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string proto = 1;
  if (this->proto().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_proto());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgHead::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.MsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHead* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgHead>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.MsgHead)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.MsgHead)
    MergeFrom(*source);
  }
}

void MsgHead::MergeFrom(const MsgHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.MsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.proto().size() > 0) {

    proto_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.proto_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void MsgHead::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.MsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHead::CopyFrom(const MsgHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.MsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHead::IsInitialized() const {
  return true;
}

void MsgHead::InternalSwap(MsgHead* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  proto_.Swap(&other->proto_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgHead::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Client_ping_req::InitAsDefaultInstance() {
}
class Client_ping_req::_Internal {
 public:
};

Client_ping_req::Client_ping_req()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Client_ping_req)
}
Client_ping_req::Client_ping_req(const Client_ping_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Client_ping_req)
}

void Client_ping_req::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Client_ping_req_YiQuJiangHu_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Client_ping_req::~Client_ping_req() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Client_ping_req)
  SharedDtor();
}

void Client_ping_req::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Client_ping_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Client_ping_req& Client_ping_req::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Client_ping_req_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Client_ping_req::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Client_ping_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Client_ping_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_msg(), ptr, ctx, "YiQuJiangHuNetData.Client_ping_req.Msg");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Client_ping_req::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Client_ping_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Msg = 1;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "YiQuJiangHuNetData.Client_ping_req.Msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Client_ping_req)
  return target;
}

size_t Client_ping_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Client_ping_req)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Client_ping_req::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Client_ping_req)
  GOOGLE_DCHECK_NE(&from, this);
  const Client_ping_req* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Client_ping_req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Client_ping_req)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Client_ping_req)
    MergeFrom(*source);
  }
}

void Client_ping_req::MergeFrom(const Client_ping_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Client_ping_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void Client_ping_req::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Client_ping_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Client_ping_req::CopyFrom(const Client_ping_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Client_ping_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Client_ping_req::IsInitialized() const {
  return true;
}

void Client_ping_req::InternalSwap(Client_ping_req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Client_ping_req::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Server_pong_rsp::InitAsDefaultInstance() {
}
class Server_pong_rsp::_Internal {
 public:
};

Server_pong_rsp::Server_pong_rsp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Server_pong_rsp)
}
Server_pong_rsp::Server_pong_rsp(const Server_pong_rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Server_pong_rsp)
}

void Server_pong_rsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Server_pong_rsp_YiQuJiangHu_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Server_pong_rsp::~Server_pong_rsp() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Server_pong_rsp)
  SharedDtor();
}

void Server_pong_rsp::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Server_pong_rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Server_pong_rsp& Server_pong_rsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Server_pong_rsp_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Server_pong_rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Server_pong_rsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Server_pong_rsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_msg(), ptr, ctx, "YiQuJiangHuNetData.Server_pong_rsp.Msg");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Server_pong_rsp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Server_pong_rsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Msg = 1;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "YiQuJiangHuNetData.Server_pong_rsp.Msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Server_pong_rsp)
  return target;
}

size_t Server_pong_rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Server_pong_rsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Server_pong_rsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Server_pong_rsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Server_pong_rsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Server_pong_rsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Server_pong_rsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Server_pong_rsp)
    MergeFrom(*source);
  }
}

void Server_pong_rsp::MergeFrom(const Server_pong_rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Server_pong_rsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void Server_pong_rsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Server_pong_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Server_pong_rsp::CopyFrom(const Server_pong_rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Server_pong_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Server_pong_rsp::IsInitialized() const {
  return true;
}

void Server_pong_rsp::InternalSwap(Server_pong_rsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Server_pong_rsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Client_regist_req::InitAsDefaultInstance() {
}
class Client_regist_req::_Internal {
 public:
};

Client_regist_req::Client_regist_req()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Client_regist_req)
}
Client_regist_req::Client_regist_req(const Client_regist_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Client_regist_req)
}

void Client_regist_req::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Client_regist_req_YiQuJiangHu_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Client_regist_req::~Client_regist_req() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Client_regist_req)
  SharedDtor();
}

void Client_regist_req::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Client_regist_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Client_regist_req& Client_regist_req::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Client_regist_req_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Client_regist_req::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Client_regist_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Client_regist_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_name(), ptr, ctx, "YiQuJiangHuNetData.Client_regist_req.Name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_password(), ptr, ctx, "YiQuJiangHuNetData.Client_regist_req.Password");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Client_regist_req::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Client_regist_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "YiQuJiangHuNetData.Client_regist_req.Name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "YiQuJiangHuNetData.Client_regist_req.Password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Client_regist_req)
  return target;
}

size_t Client_regist_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Client_regist_req)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Client_regist_req::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Client_regist_req)
  GOOGLE_DCHECK_NE(&from, this);
  const Client_regist_req* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Client_regist_req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Client_regist_req)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Client_regist_req)
    MergeFrom(*source);
  }
}

void Client_regist_req::MergeFrom(const Client_regist_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Client_regist_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void Client_regist_req::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Client_regist_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Client_regist_req::CopyFrom(const Client_regist_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Client_regist_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Client_regist_req::IsInitialized() const {
  return true;
}

void Client_regist_req::InternalSwap(Client_regist_req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Client_regist_req::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Server_regist_rsp::InitAsDefaultInstance() {
}
class Server_regist_rsp::_Internal {
 public:
};

Server_regist_rsp::Server_regist_rsp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Server_regist_rsp)
}
Server_regist_rsp::Server_regist_rsp(const Server_regist_rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_ = from.msg_;
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Server_regist_rsp)
}

void Server_regist_rsp::SharedCtor() {
  msg_ = false;
}

Server_regist_rsp::~Server_regist_rsp() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Server_regist_rsp)
  SharedDtor();
}

void Server_regist_rsp::SharedDtor() {
}

void Server_regist_rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Server_regist_rsp& Server_regist_rsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Server_regist_rsp_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Server_regist_rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Server_regist_rsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_ = false;
  _internal_metadata_.Clear();
}

const char* Server_regist_rsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool Msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          msg_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Server_regist_rsp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Server_regist_rsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Msg = 1;
  if (this->msg() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Server_regist_rsp)
  return target;
}

size_t Server_regist_rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Server_regist_rsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool Msg = 1;
  if (this->msg() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Server_regist_rsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Server_regist_rsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Server_regist_rsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Server_regist_rsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Server_regist_rsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Server_regist_rsp)
    MergeFrom(*source);
  }
}

void Server_regist_rsp::MergeFrom(const Server_regist_rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Server_regist_rsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg() != 0) {
    _internal_set_msg(from._internal_msg());
  }
}

void Server_regist_rsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Server_regist_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Server_regist_rsp::CopyFrom(const Server_regist_rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Server_regist_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Server_regist_rsp::IsInitialized() const {
  return true;
}

void Server_regist_rsp::InternalSwap(Server_regist_rsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(msg_, other->msg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Server_regist_rsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Client_login_req::InitAsDefaultInstance() {
}
class Client_login_req::_Internal {
 public:
};

Client_login_req::Client_login_req()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Client_login_req)
}
Client_login_req::Client_login_req(const Client_login_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Client_login_req)
}

void Client_login_req::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Client_login_req_YiQuJiangHu_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Client_login_req::~Client_login_req() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Client_login_req)
  SharedDtor();
}

void Client_login_req::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Client_login_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Client_login_req& Client_login_req::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Client_login_req_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Client_login_req::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Client_login_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Client_login_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_name(), ptr, ctx, "YiQuJiangHuNetData.Client_login_req.Name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_password(), ptr, ctx, "YiQuJiangHuNetData.Client_login_req.Password");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Client_login_req::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Client_login_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "YiQuJiangHuNetData.Client_login_req.Name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "YiQuJiangHuNetData.Client_login_req.Password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Client_login_req)
  return target;
}

size_t Client_login_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Client_login_req)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Client_login_req::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Client_login_req)
  GOOGLE_DCHECK_NE(&from, this);
  const Client_login_req* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Client_login_req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Client_login_req)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Client_login_req)
    MergeFrom(*source);
  }
}

void Client_login_req::MergeFrom(const Client_login_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Client_login_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void Client_login_req::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Client_login_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Client_login_req::CopyFrom(const Client_login_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Client_login_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Client_login_req::IsInitialized() const {
  return true;
}

void Client_login_req::InternalSwap(Client_login_req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Client_login_req::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Server_login_rsp::InitAsDefaultInstance() {
}
class Server_login_rsp::_Internal {
 public:
};

Server_login_rsp::Server_login_rsp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Server_login_rsp)
}
Server_login_rsp::Server_login_rsp(const Server_login_rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_ = from.msg_;
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Server_login_rsp)
}

void Server_login_rsp::SharedCtor() {
  msg_ = false;
}

Server_login_rsp::~Server_login_rsp() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Server_login_rsp)
  SharedDtor();
}

void Server_login_rsp::SharedDtor() {
}

void Server_login_rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Server_login_rsp& Server_login_rsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Server_login_rsp_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Server_login_rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Server_login_rsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_ = false;
  _internal_metadata_.Clear();
}

const char* Server_login_rsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool Msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          msg_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Server_login_rsp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Server_login_rsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Msg = 1;
  if (this->msg() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Server_login_rsp)
  return target;
}

size_t Server_login_rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Server_login_rsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool Msg = 1;
  if (this->msg() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Server_login_rsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Server_login_rsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Server_login_rsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Server_login_rsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Server_login_rsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Server_login_rsp)
    MergeFrom(*source);
  }
}

void Server_login_rsp::MergeFrom(const Server_login_rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Server_login_rsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg() != 0) {
    _internal_set_msg(from._internal_msg());
  }
}

void Server_login_rsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Server_login_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Server_login_rsp::CopyFrom(const Server_login_rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Server_login_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Server_login_rsp::IsInitialized() const {
  return true;
}

void Server_login_rsp::InternalSwap(Server_login_rsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(msg_, other->msg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Server_login_rsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Client_login_out_req::InitAsDefaultInstance() {
}
class Client_login_out_req::_Internal {
 public:
};

Client_login_out_req::Client_login_out_req()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Client_login_out_req)
}
Client_login_out_req::Client_login_out_req(const Client_login_out_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Client_login_out_req)
}

void Client_login_out_req::SharedCtor() {
  id_ = PROTOBUF_LONGLONG(0);
}

Client_login_out_req::~Client_login_out_req() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Client_login_out_req)
  SharedDtor();
}

void Client_login_out_req::SharedDtor() {
}

void Client_login_out_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Client_login_out_req& Client_login_out_req::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Client_login_out_req_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Client_login_out_req::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Client_login_out_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Client_login_out_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 ID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Client_login_out_req::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Client_login_out_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ID = 1;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Client_login_out_req)
  return target;
}

size_t Client_login_out_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Client_login_out_req)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Client_login_out_req::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Client_login_out_req)
  GOOGLE_DCHECK_NE(&from, this);
  const Client_login_out_req* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Client_login_out_req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Client_login_out_req)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Client_login_out_req)
    MergeFrom(*source);
  }
}

void Client_login_out_req::MergeFrom(const Client_login_out_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Client_login_out_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void Client_login_out_req::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Client_login_out_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Client_login_out_req::CopyFrom(const Client_login_out_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Client_login_out_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Client_login_out_req::IsInitialized() const {
  return true;
}

void Client_login_out_req::InternalSwap(Client_login_out_req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Client_login_out_req::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Server_login_out_rsp::InitAsDefaultInstance() {
}
class Server_login_out_rsp::_Internal {
 public:
};

Server_login_out_rsp::Server_login_out_rsp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Server_login_out_rsp)
}
Server_login_out_rsp::Server_login_out_rsp(const Server_login_out_rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Server_login_out_rsp)
}

void Server_login_out_rsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Server_login_out_rsp_YiQuJiangHu_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Server_login_out_rsp::~Server_login_out_rsp() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Server_login_out_rsp)
  SharedDtor();
}

void Server_login_out_rsp::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Server_login_out_rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Server_login_out_rsp& Server_login_out_rsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Server_login_out_rsp_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Server_login_out_rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Server_login_out_rsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Server_login_out_rsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_msg(), ptr, ctx, "YiQuJiangHuNetData.Server_login_out_rsp.Msg");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Server_login_out_rsp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Server_login_out_rsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Msg = 1;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "YiQuJiangHuNetData.Server_login_out_rsp.Msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Server_login_out_rsp)
  return target;
}

size_t Server_login_out_rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Server_login_out_rsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Server_login_out_rsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Server_login_out_rsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Server_login_out_rsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Server_login_out_rsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Server_login_out_rsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Server_login_out_rsp)
    MergeFrom(*source);
  }
}

void Server_login_out_rsp::MergeFrom(const Server_login_out_rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Server_login_out_rsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void Server_login_out_rsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Server_login_out_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Server_login_out_rsp::CopyFrom(const Server_login_out_rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Server_login_out_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Server_login_out_rsp::IsInitialized() const {
  return true;
}

void Server_login_out_rsp::InternalSwap(Server_login_out_rsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Server_login_out_rsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Gameinfo::InitAsDefaultInstance() {
}
class Gameinfo::_Internal {
 public:
};

Gameinfo::Gameinfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Gameinfo)
}
Gameinfo::Gameinfo(const Gameinfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gid_, &from.gid_,
    static_cast<size_t>(reinterpret_cast<char*>(&chapter_) -
    reinterpret_cast<char*>(&gid_)) + sizeof(chapter_));
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Gameinfo)
}

void Gameinfo::SharedCtor() {
  ::memset(&gid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chapter_) -
      reinterpret_cast<char*>(&gid_)) + sizeof(chapter_));
}

Gameinfo::~Gameinfo() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Gameinfo)
  SharedDtor();
}

void Gameinfo::SharedDtor() {
}

void Gameinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gameinfo& Gameinfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Gameinfo_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Gameinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Gameinfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chapter_) -
      reinterpret_cast<char*>(&gid_)) + sizeof(chapter_));
  _internal_metadata_.Clear();
}

const char* Gameinfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Gid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          gid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Chapter = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          chapter_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 ID = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Gameinfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Gameinfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Gid = 1;
  if (this->gid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_gid(), target);
  }

  // int32 Score = 2;
  if (this->score() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_score(), target);
  }

  // int32 Chapter = 3;
  if (this->chapter() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_chapter(), target);
  }

  // int64 ID = 4;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Gameinfo)
  return target;
}

size_t Gameinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Gameinfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Gid = 1;
  if (this->gid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gid());
  }

  // int32 Score = 2;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_score());
  }

  // int64 ID = 4;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // int32 Chapter = 3;
  if (this->chapter() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_chapter());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gameinfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Gameinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Gameinfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Gameinfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Gameinfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Gameinfo)
    MergeFrom(*source);
  }
}

void Gameinfo::MergeFrom(const Gameinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Gameinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gid() != 0) {
    _internal_set_gid(from._internal_gid());
  }
  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.chapter() != 0) {
    _internal_set_chapter(from._internal_chapter());
  }
}

void Gameinfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Gameinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gameinfo::CopyFrom(const Gameinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Gameinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gameinfo::IsInitialized() const {
  return true;
}

void Gameinfo::InternalSwap(Gameinfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(gid_, other->gid_);
  swap(score_, other->score_);
  swap(id_, other->id_);
  swap(chapter_, other->chapter_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Gameinfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Client_save_req::InitAsDefaultInstance() {
}
class Client_save_req::_Internal {
 public:
};

Client_save_req::Client_save_req()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Client_save_req)
}
Client_save_req::Client_save_req(const Client_save_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&score_, &from.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&score_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Client_save_req)
}

void Client_save_req::SharedCtor() {
  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&score_)) + sizeof(id_));
}

Client_save_req::~Client_save_req() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Client_save_req)
  SharedDtor();
}

void Client_save_req::SharedDtor() {
}

void Client_save_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Client_save_req& Client_save_req::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Client_save_req_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Client_save_req::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Client_save_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&score_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

const char* Client_save_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Score = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Chapter = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          chapter_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 ID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Client_save_req::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Client_save_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Score = 1;
  if (this->score() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_score(), target);
  }

  // int32 Chapter = 2;
  if (this->chapter() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_chapter(), target);
  }

  // int64 ID = 3;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Client_save_req)
  return target;
}

size_t Client_save_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Client_save_req)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Score = 1;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_score());
  }

  // int32 Chapter = 2;
  if (this->chapter() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_chapter());
  }

  // int64 ID = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Client_save_req::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Client_save_req)
  GOOGLE_DCHECK_NE(&from, this);
  const Client_save_req* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Client_save_req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Client_save_req)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Client_save_req)
    MergeFrom(*source);
  }
}

void Client_save_req::MergeFrom(const Client_save_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Client_save_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
  if (from.chapter() != 0) {
    _internal_set_chapter(from._internal_chapter());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void Client_save_req::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Client_save_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Client_save_req::CopyFrom(const Client_save_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Client_save_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Client_save_req::IsInitialized() const {
  return true;
}

void Client_save_req::InternalSwap(Client_save_req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(score_, other->score_);
  swap(chapter_, other->chapter_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Client_save_req::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Server_save_rsp::InitAsDefaultInstance() {
}
class Server_save_rsp::_Internal {
 public:
};

Server_save_rsp::Server_save_rsp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Server_save_rsp)
}
Server_save_rsp::Server_save_rsp(const Server_save_rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Server_save_rsp)
}

void Server_save_rsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Server_save_rsp_YiQuJiangHu_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Server_save_rsp::~Server_save_rsp() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Server_save_rsp)
  SharedDtor();
}

void Server_save_rsp::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Server_save_rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Server_save_rsp& Server_save_rsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Server_save_rsp_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Server_save_rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Server_save_rsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Server_save_rsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_msg(), ptr, ctx, "YiQuJiangHuNetData.Server_save_rsp.Msg");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Server_save_rsp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Server_save_rsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Msg = 1;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "YiQuJiangHuNetData.Server_save_rsp.Msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Server_save_rsp)
  return target;
}

size_t Server_save_rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Server_save_rsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Server_save_rsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Server_save_rsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Server_save_rsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Server_save_rsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Server_save_rsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Server_save_rsp)
    MergeFrom(*source);
  }
}

void Server_save_rsp::MergeFrom(const Server_save_rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Server_save_rsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void Server_save_rsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Server_save_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Server_save_rsp::CopyFrom(const Server_save_rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Server_save_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Server_save_rsp::IsInitialized() const {
  return true;
}

void Server_save_rsp::InternalSwap(Server_save_rsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Server_save_rsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Client_rank_req::InitAsDefaultInstance() {
}
class Client_rank_req::_Internal {
 public:
};

Client_rank_req::Client_rank_req()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Client_rank_req)
}
Client_rank_req::Client_rank_req(const Client_rank_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chapter_ = from.chapter_;
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Client_rank_req)
}

void Client_rank_req::SharedCtor() {
  chapter_ = PROTOBUF_LONGLONG(0);
}

Client_rank_req::~Client_rank_req() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Client_rank_req)
  SharedDtor();
}

void Client_rank_req::SharedDtor() {
}

void Client_rank_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Client_rank_req& Client_rank_req::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Client_rank_req_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Client_rank_req::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Client_rank_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chapter_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Client_rank_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 Chapter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          chapter_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Client_rank_req::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Client_rank_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Chapter = 1;
  if (this->chapter() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_chapter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Client_rank_req)
  return target;
}

size_t Client_rank_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Client_rank_req)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Chapter = 1;
  if (this->chapter() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_chapter());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Client_rank_req::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Client_rank_req)
  GOOGLE_DCHECK_NE(&from, this);
  const Client_rank_req* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Client_rank_req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Client_rank_req)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Client_rank_req)
    MergeFrom(*source);
  }
}

void Client_rank_req::MergeFrom(const Client_rank_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Client_rank_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chapter() != 0) {
    _internal_set_chapter(from._internal_chapter());
  }
}

void Client_rank_req::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Client_rank_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Client_rank_req::CopyFrom(const Client_rank_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Client_rank_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Client_rank_req::IsInitialized() const {
  return true;
}

void Client_rank_req::InternalSwap(Client_rank_req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(chapter_, other->chapter_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Client_rank_req::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Server_rank_rsp::InitAsDefaultInstance() {
}
class Server_rank_rsp::_Internal {
 public:
};

Server_rank_rsp::Server_rank_rsp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YiQuJiangHuNetData.Server_rank_rsp)
}
Server_rank_rsp::Server_rank_rsp(const Server_rank_rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      datas_(from.datas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:YiQuJiangHuNetData.Server_rank_rsp)
}

void Server_rank_rsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Server_rank_rsp_YiQuJiangHu_2eproto.base);
}

Server_rank_rsp::~Server_rank_rsp() {
  // @@protoc_insertion_point(destructor:YiQuJiangHuNetData.Server_rank_rsp)
  SharedDtor();
}

void Server_rank_rsp::SharedDtor() {
}

void Server_rank_rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Server_rank_rsp& Server_rank_rsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Server_rank_rsp_YiQuJiangHu_2eproto.base);
  return *internal_default_instance();
}


void Server_rank_rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:YiQuJiangHuNetData.Server_rank_rsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datas_.Clear();
  _internal_metadata_.Clear();
}

const char* Server_rank_rsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .YiQuJiangHuNetData.Gameinfo Datas = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_datas(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Server_rank_rsp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YiQuJiangHuNetData.Server_rank_rsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .YiQuJiangHuNetData.Gameinfo Datas = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_datas_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_datas(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YiQuJiangHuNetData.Server_rank_rsp)
  return target;
}

size_t Server_rank_rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YiQuJiangHuNetData.Server_rank_rsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .YiQuJiangHuNetData.Gameinfo Datas = 1;
  total_size += 1UL * this->_internal_datas_size();
  for (const auto& msg : this->datas_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Server_rank_rsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YiQuJiangHuNetData.Server_rank_rsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Server_rank_rsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Server_rank_rsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YiQuJiangHuNetData.Server_rank_rsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YiQuJiangHuNetData.Server_rank_rsp)
    MergeFrom(*source);
  }
}

void Server_rank_rsp::MergeFrom(const Server_rank_rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YiQuJiangHuNetData.Server_rank_rsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  datas_.MergeFrom(from.datas_);
}

void Server_rank_rsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YiQuJiangHuNetData.Server_rank_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Server_rank_rsp::CopyFrom(const Server_rank_rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YiQuJiangHuNetData.Server_rank_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Server_rank_rsp::IsInitialized() const {
  return true;
}

void Server_rank_rsp::InternalSwap(Server_rank_rsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  datas_.InternalSwap(&other->datas_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Server_rank_rsp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace YiQuJiangHuNetData
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::MsgHead* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::MsgHead >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::MsgHead >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Client_ping_req* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Client_ping_req >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Client_ping_req >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Server_pong_rsp* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Server_pong_rsp >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Server_pong_rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Client_regist_req* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Client_regist_req >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Client_regist_req >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Server_regist_rsp* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Server_regist_rsp >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Server_regist_rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Client_login_req* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Client_login_req >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Client_login_req >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Server_login_rsp* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Server_login_rsp >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Server_login_rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Client_login_out_req* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Client_login_out_req >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Client_login_out_req >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Server_login_out_rsp* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Server_login_out_rsp >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Server_login_out_rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Gameinfo* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Gameinfo >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Gameinfo >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Client_save_req* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Client_save_req >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Client_save_req >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Server_save_rsp* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Server_save_rsp >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Server_save_rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Client_rank_req* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Client_rank_req >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Client_rank_req >(arena);
}
template<> PROTOBUF_NOINLINE ::YiQuJiangHuNetData::Server_rank_rsp* Arena::CreateMaybeMessage< ::YiQuJiangHuNetData::Server_rank_rsp >(Arena* arena) {
  return Arena::CreateInternal< ::YiQuJiangHuNetData::Server_rank_rsp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
